@model MekanKesfi.Models.MekanResim

@{
    ViewBag.Title = "MekanEkle";
}



<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>
        Current Location of User in Bing Map
    </title>
    <script type="text/javascript"
            src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0">
    </script>
    <script type="text/javascript">
        var map = null;
        function GetMap() {
            map = new Microsoft.Maps.Map(document.getElementById('myMap'),
                 { credentials: "AkRFb3IW1V4bNjh1wKRt6InGzSZsv6TF8xR2iLsKQSXgyWyfdL2MWKAAMfEUuyLT" });

            // Gets current location of user and calls ZoomIn function on success
            var geoLocationProvider = new Microsoft.Maps.GeoLocationProvider(map);
            geoLocationProvider.getCurrentPosition({ successCallback: ZoomIn });

            // Zooms the map to current location
            function ZoomIn(args) {
                var locationPoint1 = document.getElementById("@Html.IdFor(model => model.latitude)");
                
                locationPoint1.value = args.center.latitude;
                locationPoint1.value = locationPoint1.value.replace(/\./g, ",");
                
                var locationPoint2 = document.getElementById("@Html.IdFor(model => model.longitude)");
                
                locationPoint2.value = args.center.longitude;
                locationPoint2.value = locationPoint2.value.replace(/\./g, ",");

                map.setView({
                    zoom: 17,
                    center: args.center
                });

                geoLocationProvider.addAccuracyCircle(args.center, 20, 20, {
                    polygonOptions: {
                        strokeThickness: 2,
                        fillColor: new Microsoft.Maps.Color(200, 255, 128, 0),
                        strokeColor: new Microsoft.Maps.Color(255, 0, 128, 0)
                    }
                });
            }
        }
</script>
</head>
<body onload="GetMap();">
    <form id="form1" runat="server">
        <div id="myMap"
             style="position:relative; width:1200px; height:300px;">
        </div>
    </form>
    

</body>
</html>






@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <h2>Mekan Ekle</h2>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <table>      
            <tr>

                <td style="font-weight:bold">Mekan Adı</td>
                <td>@Html.EditorFor(model => model.mekan_adi, new { htmlAttributes = new { @class = "form-control" } })</td>
                @Html.ValidationMessageFor(model => model.mekan_adi, "", new { @class = "text-danger" })

            </tr>
            <tr>

                <td style="font-weight:bold">Mekan Adresi</td>

                <td>@Html.EditorFor(model => model.mekan_adresi, new { htmlAttributes = new { @class = "form-control" } })</td>
                @Html.ValidationMessageFor(model => model.mekan_adresi, "", new { @class = "text-danger" })
            </tr>

            <tr>

                <td style="font-weight:bold">Telefon</td>

               <td> @Html.EditorFor(model => model.telefon, new { htmlAttributes = new { @class = "form-control" } })</td>
                @Html.ValidationMessageFor(model => model.telefon, "", new { @class = "text-danger" })


            </tr>
            <tr>
                <td style="font-weight:bold">E-Mail</td>

               <td> @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })</td>
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })

            </tr>
            <tr>

                <td style="font-weight:bold">Fotoğraf</td>

                

                <td>
                    <input type="file" name="photo" id="photo" />
                </td>
                
            </tr>
            <tr>


                <td style="font-weight:bold">Enlem</td>

                <td>@Html.EditorFor(model => model.latitude, new { id = "Text2", htmlAttributes = new { @class = "form-control" } })</td>
                @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })

            </tr>
            <tr>

                <td style="font-weight:bold">Boylam</td>
                         
                <td>@Html.EditorFor(model => model.longitude, new { id = "Text2", htmlAttributes = new { @class = "form-control" } })</td>
                @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
                
                
            </tr>
            
            <tr>
                <td></td>
                <td align="center"><input type="submit" value="Mekan Ekle" class="btn btn-default" /></td>
            </tr>
</table>
        


        </div>
}

@*@section Sctipts{
    @Scripts.Render("~/bundles/jqueryval")
}*@